from tkinter import *
import time
import random

fenetre = Tk()
fenetre.title("Tours d'Hanoï Denis")
large_fen =4*fenetre.winfo_screenwidth()//4     
haut_fen = 4*fenetre.winfo_screenheight()//4
fenetre.geometry(str(large_fen)+'x'+str(haut_fen))
cadre = Canvas(fenetre,
               bg= 'black',
               width = large_fen,
               height = haut_fen,
               highlightthickness = 100)

class Pile:
    """Classe pile qui créé le piles"""
    def __init__(self):
        self.valeurs  = [] #creation pile vide

    def empiler(self,valeur):
        """mettre une valeur dans la pile"""
        self.valeurs.append(valeur)

    def depiler(self):
        """supprimer une valeur de la pile"""
        if self.valeurs:
            return self.valeurs.pop() #supprime le dernier element

    def est_vide(self):
        """fonction qui regarde si la pile est vide ou non"""
        return self.valeurs == []

class Tour:
    """classe tour qui gère la création des tours"""
    def __init__(self,cadre):
        self.pile_gauche = Pile() #creer la pile gauche
        for i in range(0,15):
            self.pile_gauche.empiler(i)
        self.pile_milieu = Pile() #creer la pile milieu
        self.pile_droite = Pile() #creer la pile droite
        self.cadre = cadre
        self.__pisition_x1=250
        self.__pisition_y1=800
        

    def tige(self):
        """creer les tiges des tours"""
        for i in range(3):
            self.cadre.create_rectangle(self.__pisition_x1-7, self.__pisition_y1-450,self.__pisition_x1+7,self.__pisition_y1, fill='gray')
            self.__pisition_x1 +=400
        self.__pisition_x1 -=1200

    def disque(self):
        """ fonction qui met les disques sur les tiges"""
        color=['Cyan','Purple','Yellow',
               'Blue', 'Green','Light Blue','White',
               'Orange','Brown','Red']
        random_color=random.choice(color)
        pile_sauvegarde = Pile()
        g=0
        while not self.pile_gauche.est_vide():           
            i = self.pile_gauche.depiler()
            pile_sauvegarde.empiler(i)
            
        while not pile_sauvegarde.est_vide():
            i = pile_sauvegarde.depiler()
            self.pile_gauche.empiler(i)
            self.cadre.create_rectangle(self.__pisition_x1-150+i*10, self.__pisition_y1-g*20-10,self.__pisition_x1+150-i*10,self.__pisition_y1 -g*20 +10 , fill=random_color, tag=str(i))
            g=g+1
        g=0
        while not self.pile_milieu.est_vide():
            i = self.pile_milieu.depiler()
            pile_sauvegarde.empiler(i)
            
        while not pile_sauvegarde.est_vide():
            i = pile_sauvegarde.depiler()
            self.pile_milieu.empiler(i)
            self.cadre.create_rectangle(self.__pisition_x1+200+i*10, self.__pisition_y1-g*20-10,self.__pisition_x1+575-i*10,self.__pisition_y1 -g*20 +10 , fill=random_color, tag=str(i))
            g=g+1
        g=0
        while not self.pile_droite.est_vide():
            i = self.pile_droite.depiler()
            pile_sauvegarde.empiler(i)
        while not pile_sauvegarde.est_vide():
            i = pile_sauvegarde.depiler()
            self.pile_droite.empiler(i)
            self.cadre.create_rectangle(self.__pisition_x1+625+i*10, self.__pisition_y1-g*20-10,self.__pisition_x1+975-i*10,self.__pisition_y1 -g*20 +10 , fill=random_color, tag=str(i))
            g=g+1  

def deplacer(nombre_depart, depart, arrivee, intermediaire):
    """ fonction récursive qui deplace les disques sur la fenetre tkinter""" 
    if nombre_depart != 0:
        deplacer(nombre_depart-1, depart, intermediaire, arrivee)
        i = depart.depiler()
        arrivee.empiler(i) 
        cadre.delete("all") # supprime tout
        tour.tige()  
        tour.disque()
        fenetre.update()
        deplacer(nombre_depart-1, intermediaire, arrivee, depart)
          
  

 
def jeu():
    """fonction qui met tout en place"""
    tour.tige()    
    tour.disque()
    deplacer(15,tour.pile_gauche,tour.pile_droite,tour.pile_milieu)
    fenetre.update()   

tour = Tour(cadre)
cadre.pack()
jeu()
fenetre.mainloop()
